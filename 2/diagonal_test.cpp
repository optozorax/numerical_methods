#define CATCH_CONFIG_RUNNER

#include "catch.hpp"
#include "matrix.h"
#include "sparse.h"

/*
	Тестирование класса диагональной матрицы
		Создание по формату
		Создание из плотной матрицы
			Проверяются все методы
		Преобразование из плотной туда-сюда
	Тестирование итератора по строке
		Проходятся все элементы, проверяется, действительно ли они находятся на той позиции, что должны, все пройденные элементы отмечаются -1
		Если еще раз встречается на -1, то ошибка
		Если после прохода все элементы равны только -1 то все хорошо

		Это делается для различных методов
	Тестирование итерационных методов
		Тестирование с помощью итерационных методов в плотной матрице
			Для определенных матриц
			Для случайных диагональных матриц
			Для абсолютно плотных матриц
		Тестирование невязки
			Для определенных матриц
			Для случайных диагональных матриц
			Для абсолютно плотных матриц
*/


//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------

int main(int argc, char* const argv[]) {
	int result = Catch::Session().run(argc, argv);

	system("pause");
	return result;
}